{"ast":null,"code":"const BASE_URL = 'https://brasilapi.com.br/api/';\nconst getStates = async () => {\n  try {\n    const request = await fetch(`${BASE_URL}/ibge/uf/v1`);\n    if (!request.ok) {\n      throw new Error(`[${request.statusText}] Ocorreu um erro durante a requisição`);\n    }\n    const response = await request.json();\n    return response;\n  } catch (e) {\n    console.warn(e.message);\n  }\n};\nconst getState = async uf => {\n  try {\n    const request = await fetch(`${BASE_URL}/ibge/uf/v1/${uf}`);\n    if (!request.ok) {\n      throw new Error(`[${request.statusText}] Ocorreu um erro durante a requisição`);\n    }\n    const response = await request.json();\n    return response;\n  } catch (e) {\n    console.warn(e.message);\n  }\n};\nconst getAddress = async cep => {\n  try {\n    const request = await fetch(`${BASE_URL}/cep/v2/${cep}`);\n    if (!request.ok) {\n      throw new Error(`[${request.statusText}] Ocorreu um erro durante a requisição`);\n    }\n    const response = await request.json();\n    return response;\n  } catch (e) {\n    console.warn(e.message);\n  }\n};\nexport { getStates, getState, getAddress };","map":{"version":3,"names":["BASE_URL","getStates","request","fetch","ok","Error","statusText","response","json","e","console","warn","message","getState","uf","getAddress","cep"],"sources":["/Users/tiago/revisao-front/src/services/apiService.js"],"sourcesContent":["const BASE_URL = 'https://brasilapi.com.br/api/';\n\nconst getStates = async () => {\n  try {\n    const request = await fetch(`${BASE_URL}/ibge/uf/v1`);\n    if (!request.ok) {\n      throw new Error(`[${request.statusText}] Ocorreu um erro durante a requisição`);\n    }\n    const response = await request.json();\n    return response;\n  } catch(e) {\n    console.warn(e.message);\n  }\n}\n\nconst getState = async (uf) => {\n  try {\n    const request = await fetch(`${BASE_URL}/ibge/uf/v1/${uf}`);\n    if (!request.ok) {\n      throw new Error(`[${request.statusText}] Ocorreu um erro durante a requisição`);\n    }\n    const response = await request.json();\n    return response;\n  } catch(e) {\n    console.warn(e.message);\n  }\n}\n\nconst getAddress = async (cep) => {\n  try {\n    const request = await fetch(`${BASE_URL}/cep/v2/${cep}`);\n    if (!request.ok) {\n      throw new Error(`[${request.statusText}] Ocorreu um erro durante a requisição`);\n    }\n    const response = await request.json();\n    return response;\n  } catch(e) {\n    console.warn(e.message);\n  }\n}\n\nexport { getStates, getState, getAddress };"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,+BAA+B;AAEhD,MAAMC,SAAS,GAAG,YAAY;EAC5B,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,aAAY,CAAC;IACrD,IAAI,CAACE,OAAO,CAACE,EAAE,EAAE;MACf,MAAM,IAAIC,KAAK,CAAE,IAAGH,OAAO,CAACI,UAAW,wCAAuC,CAAC;IACjF;IACA,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,IAAI,EAAE;IACrC,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAME,CAAC,EAAE;IACTC,OAAO,CAACC,IAAI,CAACF,CAAC,CAACG,OAAO,CAAC;EACzB;AACF,CAAC;AAED,MAAMC,QAAQ,GAAG,MAAOC,EAAE,IAAK;EAC7B,IAAI;IACF,MAAMZ,OAAO,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,eAAcc,EAAG,EAAC,CAAC;IAC3D,IAAI,CAACZ,OAAO,CAACE,EAAE,EAAE;MACf,MAAM,IAAIC,KAAK,CAAE,IAAGH,OAAO,CAACI,UAAW,wCAAuC,CAAC;IACjF;IACA,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,IAAI,EAAE;IACrC,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAME,CAAC,EAAE;IACTC,OAAO,CAACC,IAAI,CAACF,CAAC,CAACG,OAAO,CAAC;EACzB;AACF,CAAC;AAED,MAAMG,UAAU,GAAG,MAAOC,GAAG,IAAK;EAChC,IAAI;IACF,MAAMd,OAAO,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,WAAUgB,GAAI,EAAC,CAAC;IACxD,IAAI,CAACd,OAAO,CAACE,EAAE,EAAE;MACf,MAAM,IAAIC,KAAK,CAAE,IAAGH,OAAO,CAACI,UAAW,wCAAuC,CAAC;IACjF;IACA,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,IAAI,EAAE;IACrC,OAAOD,QAAQ;EACjB,CAAC,CAAC,OAAME,CAAC,EAAE;IACTC,OAAO,CAACC,IAAI,CAACF,CAAC,CAACG,OAAO,CAAC;EACzB;AACF,CAAC;AAED,SAASX,SAAS,EAAEY,QAAQ,EAAEE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}